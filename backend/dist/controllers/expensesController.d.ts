import { Response } from 'express';
import { AuthenticatedRequest } from '@/middleware/auth';
export declare const createExpense: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const getExpenseById: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const getExpenses: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const getExpensesByCase: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const getExpensesByClient: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const updateExpense: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const deleteExpense: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const approveExpense: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const getExpenseCategories: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const getMonthlyExpenseTotals: (req: AuthenticatedRequest, res: Response) => Promise<Response<any, Record<string, any>> | undefined>;
export declare const getCaseExpenseTotals: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const getClientExpenseTotals: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const searchExpenses: (req: AuthenticatedRequest, res: Response) => Promise<Response<any, Record<string, any>> | undefined>;
declare const _default: {
    createExpense: (req: AuthenticatedRequest, res: Response) => Promise<void>;
    getExpenseById: (req: AuthenticatedRequest, res: Response) => Promise<void>;
    getExpenses: (req: AuthenticatedRequest, res: Response) => Promise<void>;
    getExpensesByCase: (req: AuthenticatedRequest, res: Response) => Promise<void>;
    getExpensesByClient: (req: AuthenticatedRequest, res: Response) => Promise<void>;
    updateExpense: (req: AuthenticatedRequest, res: Response) => Promise<void>;
    deleteExpense: (req: AuthenticatedRequest, res: Response) => Promise<void>;
    approveExpense: (req: AuthenticatedRequest, res: Response) => Promise<void>;
    getExpenseCategories: (req: AuthenticatedRequest, res: Response) => Promise<void>;
    getMonthlyExpenseTotals: (req: AuthenticatedRequest, res: Response) => Promise<Response<any, Record<string, any>> | undefined>;
    getCaseExpenseTotals: (req: AuthenticatedRequest, res: Response) => Promise<void>;
    getClientExpenseTotals: (req: AuthenticatedRequest, res: Response) => Promise<void>;
    searchExpenses: (req: AuthenticatedRequest, res: Response) => Promise<Response<any, Record<string, any>> | undefined>;
};
export default _default;
//# sourceMappingURL=expensesController.d.ts.map